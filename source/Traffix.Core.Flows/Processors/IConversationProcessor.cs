using System;
using System.Collections.Generic;
using Traffix.Core.Flows;

namespace Traffix.Data
{
    /// <summary>
    /// The delegate representing type of conversation processor methods.
    /// </summary>
    /// <typeparam name="TValue">The type of result generated by the conversation processor.</typeparam>
    /// <param name="flowKey">The flow key.</param>
    /// <param name="frames">The collection of byte arrays that constains metadata and bytes of frames of the flow.</param>
    /// <returns>The result of type <typeparamref name="TValue"/> or <see langword="null"/>.</returns>
    public delegate TValue ConversationProcessor<TValue>(FlowKey flowKey, IEnumerable<Memory<byte>> frames);

    /// <summary>
    /// An interface that every conversation processor has to implement. 
    /// </summary>
    /// <typeparam name="TValue">The type of result generated by the conversation processor.</typeparam>
    public interface IConversationProcessor<TValue>
    {
        /// <summary>
        /// When applied to a flow and its frames, it creates the result of type <typeparamref name="TValue"/>.
        /// </summary>
        /// <param name="flowKey">The flow key.</param>
        /// <param name="frames">The collection of byte arrays that constains metadata and bytes of frames of the flow.</param>
        /// <returns>The result of type <typeparamref name="TValue"/> or <see langword="null"/>.</returns>
        TValue Invoke(FlowKey flowKey, IEnumerable<Memory<byte>> frames);
    }
}
